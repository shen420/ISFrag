\name{find.level2}
\alias{find.level2}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
Finds Level 2 In-source Fragmentations
}
\description{
Refines Level 3 in-source fragment list of tables generated in find.level3() function to label additional Level 2 in-source fragments.
}
\usage{
find.level2(ISFtable)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{ISFtable}{
List of tables generated by find.level3() function.
}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	or do  help(data=index)  for the standard data sets.

## The function is currently defined as
function (ISFtable)
{
    no_cores <- detectCores() - 1
    print("Using cores:")
    print(no_cores)
    registerDoParallel(no_cores)
    ISF_list <- foreach(k = (1:length(ISFtable)), .packages = c("xcms",
        "MSnbase", "dplyr")) \%dopar\% {
        currTable <- ISFtable[[k]]
        if (currTable$MS2mz[1] == 0) {
            return(currTable)
        }
        else {
            fragmentMZ <- as.numeric(strsplit(currTable$MS2mz[1],
                ";")[[1]])
            for (t in 2:nrow(currTable)) {
                diff <- abs(fragmentMZ - currTable$mz[t])
                if (min(diff) <= 0.02) {
                  currTable$ISF_level[t] <- "Level_2"
                }
            }
            return(currTable)
        }
    }
    ISF_putative <- ISF_list[!is.na(ISF_list)]
    stopImplicitCluster()
    for (a in 1:length(ISF_putative)) {
        names(ISF_putative)[a] <- paste0(rownames(ISF_putative[[a]][1,
            ]), "_", round(ISF_putative[[a]]$mz[1], digits = 2),
            "_", round(ISF_putative[[a]]$rt[1], digits = 0))
    }
    return(ISF_putative)
  }
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory (show via RShowDoc("KEYWORDS")):
% \keyword{ ~kwd1 }
% \keyword{ ~kwd2 }
% Use only one keyword per line.
% For non-standard keywords, use \concept instead of \keyword:
% \concept{ ~cpt1 }
% \concept{ ~cpt2 }
% Use only one concept per line.
